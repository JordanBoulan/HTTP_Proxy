Jordan Boulanger, Morgan Weaver, Ellery Baines
Class: 5510, Computer Networks
Project 2: Group Project - Implementing a Simple HTTP Web Proxy
Date: 10/29/2017
Files: client.cpp, server.cpp, makefile, README.txt

This program is comprised of 3 files; README.txt, proxy.cpp, and a makefile. 
Usage: 
Run 'make default' to create the a proxy executable.

Program process:

1. The program creates a proxy server that listens for incoming TCP connections on a disgnated socket. 

2. The server waits for incoming client connections. 

3. The server will create a child process in order to handle new incoming connections.

4. The proxy server will prompt the client for a HTTP GET request, with the format:
	GET www.url.com/relative_path HTTP/1.0 [header1:values] [header2:values]...

5. The proxy server parses the request.

6. The proxy server uses a telnet connection to the requested host server to fufill the client's request. 

7. Upon recieving reponse from the requested host server, the web proxy sends the response back to the client utilizing the TCP connection it previously stablished.

8. Finally, the server closes the TCP.

Additional notes: The server is able to accept multiple clients. The server also includes error checking methods, and a zombie process clean-up method. It is assumed that the client will use correct syntax when issueing requests to the server.
